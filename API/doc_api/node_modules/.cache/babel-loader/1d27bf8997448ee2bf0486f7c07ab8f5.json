{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Vinicius\\\\Desktop\\\\documentacao_api_react\\\\doc_api\\\\src\\\\components\\\\ComponentRota.js\";\nimport React, { Component, Fragment } from 'react';\nimport JSONPretty from 'react-json-prettify';\nimport { tomorrowNightBright } from 'react-json-prettify/dist/themes';\n\nclass ComponentRota extends Component {\n  componentWillMount() {\n    this.estiloJSONPretty = {\n      background: 'rgb(0, 0, 0)',\n      brace: 'rgb(129, 211, 204)',\n      keyQuotes: 'rgb(201, 70, 56)',\n      valueQuotes: 'rgb(242, 152, 59)',\n      colon: 'rgb(129, 211, 204)',\n      comma: 'rgb(129, 211, 204)',\n      key: 'rgb(201, 70, 56)',\n      value: {\n        string: 'rgb(242, 152, 59)',\n        null: 'rgb(201, 70, 56)',\n        number: 'green',\n        boolean: 'rgb(129, 211, 204)'\n      },\n      bracket: 'rgb(129, 211, 204)'\n    };\n    console.log(this.estiloJSONPretty);\n  }\n\n  render() {\n    return React.createElement(Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"card\",\n      style: {\n        marginBottom: 25 + 'px'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"card-header\",\n      style: {\n        backgroundColor: 'royalBlue'\n      },\n      \"data-toggle\": \"collapse\",\n      \"data-target\": \"#collapse\" + this.props.parentAcc + this.props.titulo.replace(/ /g, \"_\"),\n      \"aria-controls\": \"collapse\" + this.props.parentAcc + this.props.titulo.replace(/ /g, \"_\"),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33\n      },\n      __self: this\n    }, React.createElement(\"h3\", {\n      className: \"font-weight-bold\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35\n      },\n      __self: this\n    }, this.props.titulo)), React.createElement(\"div\", {\n      id: \"collapse\" + this.props.parentAcc + this.props.titulo.replace(/ /g, \"_\"),\n      className: \"collapse\",\n      \"data-parent\": \"#\" + this.props.parentAcc,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"card-body\",\n      style: {\n        backgroundColor: 'black'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"card-title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40\n      },\n      __self: this\n    }, React.createElement(\"h4\", {\n      className: \"font-weight-bold\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41\n      },\n      __self: this\n    }, this.props.rota)), React.createElement(\"div\", {\n      className: \"card-subtitle text-muted\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    }, \"M\\xE9todo \", this.props.metodo.toUpperCase())), React.createElement(\"div\", {\n      className: \"card-text\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    }, \"Formato do JSON a ser enviado:\"), React.createElement(\"pre\", {\n      className: \"json\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    }, React.createElement(JSONPretty, {\n      json: this.props.json,\n      theme: this.estiloJSONPretty,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    })), React.createElement(\"hr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }, \"Possiveis Respostas HTTP:\"), React.createElement(\"div\", {\n      className: \"cx_status\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      className: \"s\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }, \"201\"), React.createElement(\"span\", {\n      className: \"desc\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }, \"Criado com sucesso\")), React.createElement(\"div\", {\n      className: \"cx_status\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      className: \"e\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }, \"400\"), React.createElement(\"span\", {\n      className: \"desc\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }, \"M\\xE1 requisi\\xE7\\xE3o (retorna um JSON com os erros)\")), React.createElement(\"div\", {\n      className: \"cx_status\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      className: \"e\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }, \"500\"), React.createElement(\"span\", {\n      className: \"desc\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }, \"Erro do servidor\")))))));\n  }\n\n}\n\nexport default ComponentRota;","map":{"version":3,"sources":["C:\\Users\\Vinicius\\Desktop\\documentacao_api_react\\doc_api\\src\\components\\ComponentRota.js"],"names":["React","Component","Fragment","JSONPretty","tomorrowNightBright","ComponentRota","componentWillMount","estiloJSONPretty","background","brace","keyQuotes","valueQuotes","colon","comma","key","value","string","null","number","boolean","bracket","console","log","render","marginBottom","backgroundColor","props","parentAcc","titulo","replace","rota","metodo","toUpperCase","json"],"mappings":"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","sourcesContent":["import React, { Component, Fragment } from 'react';\r\nimport JSONPretty from 'react-json-prettify';\r\nimport { tomorrowNightBright } from 'react-json-prettify/dist/themes'\r\n\r\nclass ComponentRota extends Component {\r\n\r\n   componentWillMount() {\r\n      this.estiloJSONPretty = {\r\n         background: 'rgb(0, 0, 0)',\r\n         brace: 'rgb(129, 211, 204)',\r\n         keyQuotes: 'rgb(201, 70, 56)',\r\n         valueQuotes: 'rgb(242, 152, 59)',\r\n         colon: 'rgb(129, 211, 204)',\r\n         comma: 'rgb(129, 211, 204)',\r\n         key: 'rgb(201, 70, 56)',\r\n         value: {\r\n            string: 'rgb(242, 152, 59)',\r\n            null: 'rgb(201, 70, 56)',\r\n            number: 'green',\r\n            boolean: 'rgb(129, 211, 204)',\r\n         },\r\n         bracket: 'rgb(129, 211, 204)',\r\n      };\r\n      console.log(this.estiloJSONPretty)\r\n   }\r\n\r\n   render() {\r\n      return (\r\n         <Fragment>\r\n            {/* <!--INICIO CARD FUNCÃO ROTA--> */}\r\n            <div className=\"card\" style={{marginBottom: 25+'px'}}>\r\n\r\n               <div className=\"card-header\" style={{ backgroundColor: 'royalBlue' }} \r\n                  data-toggle=\"collapse\" data-target={ \"#collapse\" + this.props.parentAcc + this.props.titulo.replace(/ /g, \"_\")} aria-controls={ \"collapse\" + this.props.parentAcc + this.props.titulo.replace(/ /g, \"_\") }>\r\n                  <h3 className=\"font-weight-bold\">{this.props.titulo}</h3>\r\n               </div>\r\n\r\n               <div id={ \"collapse\" + this.props.parentAcc + this.props.titulo.replace(/ /g, \"_\") } className=\"collapse\" data-parent={ \"#\" + this.props.parentAcc }>\r\n                  <div className=\"card-body\" style={{ backgroundColor: 'black' }}>\r\n                     <div className=\"card-title\">\r\n                        <h4 className=\"font-weight-bold\">{this.props.rota}</h4>\r\n                     </div>\r\n                     <div className=\"card-subtitle text-muted\">\r\n                        <p>Método {this.props.metodo.toUpperCase()}</p>\r\n                     </div>\r\n                     <div className=\"card-text\">\r\n                        <p>Formato do JSON a ser enviado:</p>\r\n                        <pre className=\"json\">\r\n                           <JSONPretty json={this.props.json} theme={this.estiloJSONPretty} />\r\n                        </pre>\r\n                        <hr />\r\n\r\n                        <p>Possiveis Respostas HTTP:</p>\r\n\r\n                        <div className=\"cx_status\">\r\n                           <span className=\"s\">201</span>\r\n                           <span className=\"desc\">Criado com sucesso</span>\r\n                        </div>\r\n                        <div className=\"cx_status\">\r\n                           <span className=\"e\">400</span>\r\n                           <span className=\"desc\">Má requisição (retorna um JSON com os erros)</span>\r\n                        </div>\r\n                        <div className=\"cx_status\">\r\n                           <span className=\"e\">500</span>\r\n                           <span className=\"desc\">Erro do servidor</span>\r\n                        </div>\r\n\r\n                     </div>\r\n                  </div>\r\n               </div>\r\n            </div>\r\n            {/* <!--FIM CARD FUNCÃO ROTA--> */}\r\n         </Fragment>\r\n      );\r\n   }\r\n}\r\n\r\nexport default ComponentRota;"]},"metadata":{},"sourceType":"module"}