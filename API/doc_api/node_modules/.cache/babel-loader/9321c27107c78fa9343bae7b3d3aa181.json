{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Vinicius\\\\Desktop\\\\documentacao_api_react\\\\doc_api\\\\src\\\\components\\\\ComponentRota.js\";\nimport React, { Component, Fragment } from 'react';\nimport JSONPretty from 'react-json-prettify';\nimport { tomorrowNightBright } from 'react-json-prettify/dist/themes';\n\nclass ComponentRota extends Component {\n  render() {\n    return React.createElement(Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 9\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"card\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 11\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"card-header\",\n      style: {\n        backgroundColor: 'royalBlue'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 13\n      },\n      __self: this\n    }, React.createElement(\"h3\", {\n      className: \"font-weight-bold\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 14\n      },\n      __self: this\n    }, this.props.titulo)), React.createElement(\"div\", {\n      className: \"card-body\",\n      style: {\n        backgroundColor: 'black'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 17\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"card-title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 18\n      },\n      __self: this\n    }, React.createElement(\"h4\", {\n      className: \"font-weight-bold\",\n      style: {\n        color: '#DA00B9'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 19\n      },\n      __self: this\n    }, this.props.rota)), React.createElement(\"div\", {\n      className: \"card-subtitle text-muted\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 21\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22\n      },\n      __self: this\n    }, \"M\\xE9todo \", this.props.metodo.toUpperCase())), React.createElement(\"div\", {\n      className: \"card-text\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25\n      },\n      __self: this\n    }, \"Formato do JSON a ser enviado:\"), React.createElement(\"pre\", {\n      className: \"json\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26\n      },\n      __self: this\n    }, React.createElement(JSONPretty, {\n      json: this.props.json,\n      theme: {\n        background: 'rgb(39, 40, 34)',\n        brace: 'rgb(129, 211, 204)',\n        keyQuotes: 'rgb(129, 211, 204)',\n        valueQuotes: 'rgb(129, 211, 204)',\n        colon: 'rgb(129, 211, 204)',\n        comma: 'rgb(129, 211, 204)',\n        key: 'rgb(201, 70, 56)',\n        value: {\n          string: 'rgb(242, 152, 59)',\n          null: 'rgb(201, 70, 56)',\n          number: 'green',\n          boolean: 'rgb(129, 211, 204)'\n        },\n        bracket: 'rgb(129, 211, 204)'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27\n      },\n      __self: this\n    })), React.createElement(\"hr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    }), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    }, \"Possiveis Respostas HTTP:\"), React.createElement(\"div\", {\n      className: \"cx_status\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      className: \"s\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    }, \"201\"), React.createElement(\"span\", {\n      className: \"desc\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }, \"Criado com sucesso\")), React.createElement(\"div\", {\n      className: \"cx_status\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      className: \"e\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }, \"400\"), React.createElement(\"span\", {\n      className: \"desc\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }, \"M\\xE1 requisi\\xE7\\xE3o (retorna um JSON com os erros)\")), React.createElement(\"div\", {\n      className: \"cx_status\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      className: \"e\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }, \"500\"), React.createElement(\"span\", {\n      className: \"desc\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }, \"Erro do servidor\"))))));\n  }\n\n}\n\nexport default ComponentRota;","map":{"version":3,"sources":["C:\\Users\\Vinicius\\Desktop\\documentacao_api_react\\doc_api\\src\\components\\ComponentRota.js"],"names":["React","Component","Fragment","JSONPretty","tomorrowNightBright","ComponentRota","render","backgroundColor","props","titulo","color","rota","metodo","toUpperCase","json","background","brace","keyQuotes","valueQuotes","colon","comma","key","value","string","null","number","boolean","bracket"],"mappings":"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","sourcesContent":["import React, { Component, Fragment } from 'react';\r\nimport JSONPretty from 'react-json-prettify';\r\nimport { tomorrowNightBright } from 'react-json-prettify/dist/themes'\r\n\r\nclass ComponentRota extends Component{\r\n\r\n   render() {\r\n      return (\r\n         <Fragment>\r\n            {/* <!--INICIO CARD FUNCÃO ROTA--> */}\r\n            <div className=\"card\">\r\n\r\n               <div className=\"card-header\" style={{ backgroundColor: 'royalBlue' }}>\r\n                  <h3 className=\"font-weight-bold\">{this.props.titulo}</h3>\r\n               </div>\r\n\r\n               <div className=\"card-body\" style={{ backgroundColor: 'black' }}>\r\n                  <div className=\"card-title\">\r\n                     <h4 className=\"font-weight-bold\" style={{ color: '#DA00B9' }}>{this.props.rota}</h4>\r\n                  </div>\r\n                  <div className=\"card-subtitle text-muted\">\r\n                     <p>Método {this.props.metodo.toUpperCase()}</p>\r\n                  </div>\r\n                  <div className=\"card-text\">\r\n                     <p>Formato do JSON a ser enviado:</p>\r\n                     <pre className=\"json\">\r\n                        <JSONPretty json={this.props.json} theme={{\r\n    background: 'rgb(39, 40, 34)',\r\n    brace: 'rgb(129, 211, 204)',\r\n    keyQuotes: 'rgb(129, 211, 204)',\r\n    valueQuotes: 'rgb(129, 211, 204)',\r\n    colon: 'rgb(129, 211, 204)',\r\n    comma: 'rgb(129, 211, 204)',\r\n    key: 'rgb(201, 70, 56)',\r\n    value: {\r\n        string: 'rgb(242, 152, 59)',\r\n        null: 'rgb(201, 70, 56)',\r\n        number: 'green',\r\n        boolean: 'rgb(129, 211, 204)',\r\n    },\r\n    bracket: 'rgb(129, 211, 204)',\r\n}} />\r\n                     </pre>\r\n                     <hr />\r\n\r\n                     <p>Possiveis Respostas HTTP:</p>\r\n\r\n                     <div className=\"cx_status\">\r\n                        <span className=\"s\">201</span>\r\n                        <span className=\"desc\">Criado com sucesso</span>\r\n                     </div>\r\n                     <div className=\"cx_status\">\r\n                        <span className=\"e\">400</span>\r\n                        <span className=\"desc\">Má requisição (retorna um JSON com os erros)</span>\r\n                     </div>\r\n                     <div className=\"cx_status\">\r\n                        <span className=\"e\">500</span>\r\n                        <span className=\"desc\">Erro do servidor</span>\r\n                     </div>\r\n\r\n                  </div>\r\n               </div>\r\n\r\n            </div>\r\n            {/* <!--FIM CARD FUNCÃO ROTA--> */}\r\n         </Fragment>\r\n      );\r\n   }\r\n}\r\n\r\nexport default ComponentRota;"]},"metadata":{},"sourceType":"module"}