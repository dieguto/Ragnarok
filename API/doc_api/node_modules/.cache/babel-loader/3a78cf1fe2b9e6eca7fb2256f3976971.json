{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Vinicius\\\\Desktop\\\\doc_api\\\\src\\\\components\\\\ComponentCardRota.js\";\nimport React, { Component, Fragment } from 'react';\nimport JSONPretty from 'react-json-prettify';\n\nclass ComponentRota extends Component {\n  componentWillMount() {\n    this.estiloJSONPrettyMain = {\n      background: 'rgb(0, 0, 0)',\n      brace: 'rgb(129, 211, 204)',\n      keyQuotes: 'rgb(201, 70, 56)',\n      valueQuotes: 'rgb(0, 223, 235)',\n      colon: 'rgb(129, 211, 204)',\n      comma: 'rgb(129, 211, 204)',\n      key: 'rgb(201, 70, 56)',\n      value: {\n        string: 'rgb(202, 209, 61)',\n        null: 'rgb(255, 183, 0)',\n        number: 'rgb(0, 132, 255)',\n        boolean: 'rgb(129, 211, 204)'\n      },\n      bracket: 'rgb(129, 211, 204)'\n    };\n    this.estiloJSONPrettySub = {\n      background: 'rgb(0, 0, 0)',\n      brace: 'rgb(129, 211, 204)',\n      keyQuotes: 'rgb(201, 70, 56)',\n      valueQuotes: 'rgb(242, 152, 59)',\n      colon: 'rgb(129, 211, 204)',\n      comma: 'rgb(129, 211, 204)',\n      key: 'rgb(51, 204, 51)',\n      value: {\n        string: 'rgb(133, 51, 204)',\n        null: 'rgb(51, 56, 204)',\n        number: 'rgb(204, 51, 150)',\n        boolean: 'rgb(235, 0, 12)'\n      },\n      bracket: 'rgb(129, 211, 204)'\n    };\n  }\n\n  getCompJsonReq() {\n    const jsonReq = this.props.jsonReq;\n\n    if (jsonReq) {\n      return React.createElement(Fragment, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50\n        },\n        __self: this\n      }, \"Formato do JSON a ser enviado:\"), React.createElement(\"pre\", {\n        className: \"json\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51\n        },\n        __self: this\n      }, React.createElement(JSONPretty, {\n        json: jsonReq,\n        theme: this.estiloJSONPrettyMain,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52\n        },\n        __self: this\n      })));\n    } else {\n      return React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58\n        },\n        __self: this\n      });\n    }\n  }\n\n  getCompResp() {\n    const jsonResp = this.props.jsonResp;\n    this.props.jsonResp.map(resp => {\n      const status = resp.status;\n      const respJson = resp.resp;\n      let DivJsonResp = \"\";\n      let desc = \"\";\n      let classStatus = \"\";\n\n      if (respJson) {\n        DivJsonResp = () => {\n          return React.createElement(Fragment, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 78\n            },\n            __self: this\n          }, React.createElement(\"p\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 79\n            },\n            __self: this\n          }, \"E tambem retorna JSON no formato:\"), React.createElement(JSONPretty, {\n            json: respJson,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 80\n            },\n            __self: this\n          }), \";\");\n        };\n      } else {\n        DivJsonResp = () => {\n          return React.createElement(\"span\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 88\n            },\n            __self: this\n          });\n        };\n      }\n\n      if (status[0] === 2) {\n        classStatus = \"verde\";\n      } else if (status[0] === 4 || status[0] == 5) {\n        classStatus = \"vermelho\";\n      } else {\n        classStatus = \"alerta\";\n      }\n\n      switch (status) {\n        case 201:\n          desc = \"Criado com sucesso!\";\n          break;\n\n        case 400:\n          desc = \"Má requisição (retorna um JSON com os erros)\";\n          break;\n\n        case 500:\n          desc = \"Erro do servidor\";\n          break;\n\n        default:\n          desc = \"Status \" + status;\n          break;\n      }\n\n      return React.createElement(Fragment, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 123\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"cx_resp\",\n        style: {\n          marginBottom: 10 + \"px\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 124\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        className: classStatus,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 125\n        },\n        __self: this\n      }, status), React.createElement(\"span\", {\n        className: \"desc\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 126\n        },\n        __self: this\n      }, desc)), \";\", DivJsonResp, \";\");\n    });\n  }\n\n  render() {\n    return React.createElement(Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"card\",\n      style: {\n        marginBottom: 25 + 'px'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"card-header\",\n      style: {\n        backgroundColor: 'royalBlue'\n      },\n      \"data-toggle\": \"collapse\",\n      \"data-target\": \"#collapse\" + this.props.parentAcc + this.props.titulo.replace(/ /g, \"_\"),\n      \"aria-controls\": \"collapse\" + this.props.parentAcc + this.props.titulo.replace(/ /g, \"_\"),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143\n      },\n      __self: this\n    }, React.createElement(\"h3\", {\n      className: \"font-weight-bold\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145\n      },\n      __self: this\n    }, this.props.titulo)), React.createElement(\"div\", {\n      id: \"collapse\" + this.props.parentAcc + this.props.titulo.replace(/ /g, \"_\"),\n      className: \"collapse\",\n      \"data-parent\": \"#\" + this.props.parentAcc,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"card-body\",\n      style: {\n        backgroundColor: 'black'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"card-title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 150\n      },\n      __self: this\n    }, React.createElement(\"h4\", {\n      className: \"font-weight-bold\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 151\n      },\n      __self: this\n    }, this.props.rota)), React.createElement(\"div\", {\n      className: \"card-subtitle text-muted\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 153\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 154\n      },\n      __self: this\n    }, \"M\\xE9todo \", this.props.metodo.toUpperCase())), React.createElement(\"div\", {\n      className: \"card-text\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 156\n      },\n      __self: this\n    }, this.getCompJsonReq(), React.createElement(\"hr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 161\n      },\n      __self: this\n    }), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 163\n      },\n      __self: this\n    }, \"Possiveis Respostas HTTP:\"), React.createElement(\"div\", {\n      className: \"cx_status\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 167\n      },\n      __self: this\n    }, this.getCompResp()))))));\n  }\n\n}\n\nexport default ComponentRota;","map":{"version":3,"sources":["C:\\Users\\Vinicius\\Desktop\\doc_api\\src\\components\\ComponentCardRota.js"],"names":["React","Component","Fragment","JSONPretty","ComponentRota","componentWillMount","estiloJSONPrettyMain","background","brace","keyQuotes","valueQuotes","colon","comma","key","value","string","null","number","boolean","bracket","estiloJSONPrettySub","getCompJsonReq","jsonReq","props","getCompResp","jsonResp","map","resp","status","respJson","DivJsonResp","desc","classStatus","marginBottom","render","backgroundColor","parentAcc","titulo","replace","rota","metodo","toUpperCase"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,UAAP,MAAuB,qBAAvB;;AAEA,MAAMC,aAAN,SAA4BH,SAA5B,CAAsC;AAEnCI,EAAAA,kBAAkB,GAAG;AAClB,SAAKC,oBAAL,GAA4B;AACzBC,MAAAA,UAAU,EAAE,cADa;AAEzBC,MAAAA,KAAK,EAAE,oBAFkB;AAGzBC,MAAAA,SAAS,EAAE,kBAHc;AAIzBC,MAAAA,WAAW,EAAE,kBAJY;AAKzBC,MAAAA,KAAK,EAAE,oBALkB;AAMzBC,MAAAA,KAAK,EAAE,oBANkB;AAOzBC,MAAAA,GAAG,EAAE,kBAPoB;AAQzBC,MAAAA,KAAK,EAAE;AACJC,QAAAA,MAAM,EAAE,mBADJ;AAEJC,QAAAA,IAAI,EAAE,kBAFF;AAGJC,QAAAA,MAAM,EAAE,kBAHJ;AAIJC,QAAAA,OAAO,EAAE;AAJL,OARkB;AAczBC,MAAAA,OAAO,EAAE;AAdgB,KAA5B;AAiBA,SAAKC,mBAAL,GAA2B;AACxBb,MAAAA,UAAU,EAAE,cADY;AAExBC,MAAAA,KAAK,EAAE,oBAFiB;AAGxBC,MAAAA,SAAS,EAAE,kBAHa;AAIxBC,MAAAA,WAAW,EAAE,mBAJW;AAKxBC,MAAAA,KAAK,EAAE,oBALiB;AAMxBC,MAAAA,KAAK,EAAE,oBANiB;AAOxBC,MAAAA,GAAG,EAAE,kBAPmB;AAQxBC,MAAAA,KAAK,EAAE;AACJC,QAAAA,MAAM,EAAE,mBADJ;AAEJC,QAAAA,IAAI,EAAE,kBAFF;AAGJC,QAAAA,MAAM,EAAE,mBAHJ;AAIJC,QAAAA,OAAO,EAAE;AAJL,OARiB;AAcxBC,MAAAA,OAAO,EAAE;AAde,KAA3B;AAkBF;;AAEDE,EAAAA,cAAc,GAAE;AACb,UAAMC,OAAO,GAAG,KAAKC,KAAL,CAAWD,OAA3B;;AAEA,QAAGA,OAAH,EAAW;AACR,aACG,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0CADH,EAEG;AAAK,QAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACG,oBAAC,UAAD;AAAY,QAAA,IAAI,EAAEA,OAAlB;AAA2B,QAAA,KAAK,EAAE,KAAKhB,oBAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADH,CAFH,CADH;AAQF,KATD,MASO;AACJ,aACG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADH;AAGF;AACH;;AAEDkB,EAAAA,WAAW,GAAE;AAEV,UAAMC,QAAQ,GAAG,KAAKF,KAAL,CAAWE,QAA5B;AAEA,SAAKF,KAAL,CAAWE,QAAX,CAAoBC,GAApB,CAAwBC,IAAI,IAAG;AAC5B,YAAMC,MAAM,GAAGD,IAAI,CAACC,MAApB;AACA,YAAMC,QAAQ,GAAGF,IAAI,CAACA,IAAtB;AAEA,UAAIG,WAAW,GAAG,EAAlB;AACA,UAAIC,IAAI,GAAG,EAAX;AACA,UAAIC,WAAW,GAAG,EAAlB;;AAEA,UAAGH,QAAH,EAAY;AACTC,QAAAA,WAAW,GAAG,MAAI;AACf,iBACG,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aACG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iDADH,EAEG,oBAAC,UAAD;AAAY,YAAA,IAAI,EAAGD,QAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFH,MADH;AAMF,SAPD;AASF,OAVD,MAUO;AACJC,QAAAA,WAAW,GAAG,MAAI;AACf,iBACG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADH;AAGF,SAJD;AAKF;;AAED,UAAGF,MAAM,CAAC,CAAD,CAAN,KAAc,CAAjB,EAAmB;AAChBI,QAAAA,WAAW,GAAG,OAAd;AAEF,OAHD,MAGO,IAAGJ,MAAM,CAAC,CAAD,CAAN,KAAc,CAAd,IAAmBA,MAAM,CAAC,CAAD,CAAN,IAAa,CAAnC,EAAqC;AACzCI,QAAAA,WAAW,GAAG,UAAd;AAEF,OAHM,MAGA;AACJA,QAAAA,WAAW,GAAG,QAAd;AACF;;AAED,cAAOJ,MAAP;AACG,aAAK,GAAL;AACGG,UAAAA,IAAI,GAAG,qBAAP;AACA;;AAEH,aAAK,GAAL;AACGA,UAAAA,IAAI,GAAG,8CAAP;AACA;;AAEH,aAAK,GAAL;AACGA,UAAAA,IAAI,GAAG,kBAAP;AACA;;AAEH;AACGA,UAAAA,IAAI,GAAG,YAAYH,MAAnB;AACA;AAfN;;AAmBA,aACG,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACG;AAAK,QAAA,SAAS,EAAC,SAAf;AAAyB,QAAA,KAAK,EAAE;AAACK,UAAAA,YAAY,EAAC,KAAG;AAAjB,SAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACG;AAAM,QAAA,SAAS,EAAGD,WAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAkCJ,MAAlC,CADH,EAEG;AAAM,QAAA,SAAS,EAAC,MAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAyBG,IAAzB,CAFH,CADH,OAKKD,WALL,MADH;AAUF,KAjED;AAoEF;;AAEDI,EAAAA,MAAM,GAAG;AACN,WACG,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEG;AAAK,MAAA,SAAS,EAAC,MAAf;AAAsB,MAAA,KAAK,EAAE;AAACD,QAAAA,YAAY,EAAE,KAAG;AAAlB,OAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEG;AAAK,MAAA,SAAS,EAAC,aAAf;AAA6B,MAAA,KAAK,EAAE;AAAEE,QAAAA,eAAe,EAAE;AAAnB,OAApC;AACG,qBAAY,UADf;AAC0B,qBAAc,cAAc,KAAKZ,KAAL,CAAWa,SAAzB,GAAqC,KAAKb,KAAL,CAAWc,MAAX,CAAkBC,OAAlB,CAA0B,IAA1B,EAAgC,GAAhC,CAD7E;AACmH,uBAAgB,aAAa,KAAKf,KAAL,CAAWa,SAAxB,GAAoC,KAAKb,KAAL,CAAWc,MAAX,CAAkBC,OAAlB,CAA0B,IAA1B,EAAgC,GAAhC,CADvK;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEG;AAAI,MAAA,SAAS,EAAC,kBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAkC,KAAKf,KAAL,CAAWc,MAA7C,CAFH,CAFH,EAOG;AAAK,MAAA,EAAE,EAAG,aAAa,KAAKd,KAAL,CAAWa,SAAxB,GAAoC,KAAKb,KAAL,CAAWc,MAAX,CAAkBC,OAAlB,CAA0B,IAA1B,EAAgC,GAAhC,CAA9C;AAAqF,MAAA,SAAS,EAAC,UAA/F;AAA0G,qBAAc,MAAM,KAAKf,KAAL,CAAWa,SAAzI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG;AAAK,MAAA,SAAS,EAAC,WAAf;AAA2B,MAAA,KAAK,EAAE;AAAED,QAAAA,eAAe,EAAE;AAAnB,OAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG;AAAK,MAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG;AAAI,MAAA,SAAS,EAAC,kBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAkC,KAAKZ,KAAL,CAAWgB,IAA7C,CADH,CADH,EAIG;AAAK,MAAA,SAAS,EAAC,0BAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAAW,KAAKhB,KAAL,CAAWiB,MAAX,CAAkBC,WAAlB,EAAX,CADH,CAJH,EAOG;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAGQ,KAAKpB,cAAL,EAHR,EAKG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MALH,EAOG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mCAPH,EAWG;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEK,KAAKG,WAAL,EAFL,CAXH,CAPH,CADH,CAPH,CAFH,CADH;AA0CF;;AAhLkC;;AAmLtC,eAAepB,aAAf","sourcesContent":["import React, { Component, Fragment } from 'react';\r\nimport JSONPretty from 'react-json-prettify';\r\n\r\nclass ComponentRota extends Component {\r\n\r\n   componentWillMount() {\r\n      this.estiloJSONPrettyMain = {\r\n         background: 'rgb(0, 0, 0)',\r\n         brace: 'rgb(129, 211, 204)',\r\n         keyQuotes: 'rgb(201, 70, 56)',\r\n         valueQuotes: 'rgb(0, 223, 235)',\r\n         colon: 'rgb(129, 211, 204)',\r\n         comma: 'rgb(129, 211, 204)',\r\n         key: 'rgb(201, 70, 56)',\r\n         value: {\r\n            string: 'rgb(202, 209, 61)',\r\n            null: 'rgb(255, 183, 0)',\r\n            number: 'rgb(0, 132, 255)',\r\n            boolean: 'rgb(129, 211, 204)',\r\n         },\r\n         bracket: 'rgb(129, 211, 204)',\r\n      };\r\n\r\n      this.estiloJSONPrettySub = {\r\n         background: 'rgb(0, 0, 0)',\r\n         brace: 'rgb(129, 211, 204)',\r\n         keyQuotes: 'rgb(201, 70, 56)',\r\n         valueQuotes: 'rgb(242, 152, 59)',\r\n         colon: 'rgb(129, 211, 204)',\r\n         comma: 'rgb(129, 211, 204)',\r\n         key: 'rgb(51, 204, 51)',\r\n         value: {\r\n            string: 'rgb(133, 51, 204)',\r\n            null: 'rgb(51, 56, 204)',\r\n            number: 'rgb(204, 51, 150)',\r\n            boolean: 'rgb(235, 0, 12)',\r\n         },\r\n         bracket: 'rgb(129, 211, 204)',\r\n      };\r\n\r\n      \r\n   }\r\n\r\n   getCompJsonReq(){\r\n      const jsonReq = this.props.jsonReq;\r\n      \r\n      if(jsonReq){\r\n         return(\r\n            <Fragment>\r\n               <p>Formato do JSON a ser enviado:</p>\r\n               <pre className=\"json\">\r\n                  <JSONPretty json={jsonReq} theme={this.estiloJSONPrettyMain} />\r\n               </pre>\r\n            </Fragment>\r\n         );\r\n      } else {\r\n         return(\r\n            <span></span>\r\n         );\r\n      }\r\n   };\r\n\r\n   getCompResp(){\r\n      \r\n      const jsonResp = this.props.jsonResp;\r\n\r\n      this.props.jsonResp.map(resp =>{\r\n         const status = resp.status;\r\n         const respJson = resp.resp;\r\n\r\n         let DivJsonResp = \"\";\r\n         let desc = \"\";\r\n         let classStatus = \"\";\r\n\r\n         if(respJson){\r\n            DivJsonResp = ()=>{\r\n               return (\r\n                  <Fragment>\r\n                     <p>E tambem retorna JSON no formato:</p>\r\n                     <JSONPretty json={ respJson } />;\r\n                  </Fragment>\r\n               );\r\n            }\r\n               \r\n         } else {\r\n            DivJsonResp = ()=>{\r\n               return (\r\n                  <span></span>\r\n               );\r\n            } \r\n         }\r\n\r\n         if(status[0] === 2){\r\n            classStatus = \"verde\";\r\n\r\n         } else if(status[0] === 4 || status[0] == 5){\r\n            classStatus = \"vermelho\";\r\n\r\n         } else {\r\n            classStatus = \"alerta\";\r\n         }\r\n\r\n         switch(status){\r\n            case 201:\r\n               desc = \"Criado com sucesso!\"\r\n               break;\r\n            \r\n            case 400:\r\n               desc = \"Má requisição (retorna um JSON com os erros)\"; \r\n               break;\r\n\r\n            case 500:\r\n               desc = \"Erro do servidor\";\r\n               break;\r\n\r\n            default:\r\n               desc = \"Status \" + status;\r\n               break;\r\n         }\r\n\r\n\r\n         return(\r\n            <Fragment>\r\n               <div className=\"cx_resp\" style={{marginBottom:10+\"px\"}}>\r\n                  <span className={ classStatus }>{ status }</span>\r\n                  <span className=\"desc\">{ desc }</span>\r\n               </div>;\r\n               { DivJsonResp };\r\n            </Fragment>\r\n         );\r\n            \r\n      });\r\n\r\n      \r\n   } \r\n\r\n   render() {\r\n      return (\r\n         <Fragment>\r\n\r\n            <div className=\"card\" style={{marginBottom: 25+'px'}}>\r\n\r\n               <div className=\"card-header\" style={{ backgroundColor: 'royalBlue' }} \r\n                  data-toggle=\"collapse\" data-target={ \"#collapse\" + this.props.parentAcc + this.props.titulo.replace(/ /g, \"_\")} aria-controls={ \"collapse\" + this.props.parentAcc + this.props.titulo.replace(/ /g, \"_\") }>\r\n                  <h3 className=\"font-weight-bold\">{this.props.titulo}</h3>\r\n               </div>\r\n\r\n               <div id={ \"collapse\" + this.props.parentAcc + this.props.titulo.replace(/ /g, \"_\") } className=\"collapse\" data-parent={ \"#\" + this.props.parentAcc }>\r\n                  <div className=\"card-body\" style={{ backgroundColor: 'black' }}>\r\n                     <div className=\"card-title\">\r\n                        <h4 className=\"font-weight-bold\">{this.props.rota}</h4>\r\n                     </div>\r\n                     <div className=\"card-subtitle text-muted\">\r\n                        <p>Método {this.props.metodo.toUpperCase()}</p>\r\n                     </div>\r\n                     <div className=\"card-text\">\r\n                        \r\n                           {/* VERIFICA SE EXISTE UMA JSON A SER PASSADO NA REQUESIÇÃO */}\r\n                           { this.getCompJsonReq() }\r\n                           \r\n                        <hr/>\r\n\r\n                        <p>Possiveis Respostas HTTP:</p>\r\n\r\n                        {/* //{ this.getCompJsonResp() } */}\r\n\r\n                        <div className=\"cx_status\">\r\n\r\n                           { this.getCompResp() }\r\n\r\n                        </div>\r\n\r\n                     </div>\r\n                  </div>\r\n               </div>\r\n            </div>\r\n\r\n         </Fragment>\r\n      );\r\n   }\r\n}\r\n\r\nexport default ComponentRota;"]},"metadata":{},"sourceType":"module"}