{"version":3,"sources":["components/ComponentCardInfoImportante.js","boxes/BoxInfoImportante.js","components/ComponentCardPrincipal.js","components/ComponentCardRota.js","boxes/BoxUsuario.js","boxes/BoxLogin.js","App.js","serviceWorker.js","index.js"],"names":["ComponentCardPrincipal","className","style","marginBottom","backgroundColor","color","data-toggle","data-target","this","props","titulo","replace","aria-controls","id","data-parent","children","Component","BoxUsuario","lineHeight","marginLeft","src","alt","ComponentRota","estiloJSONPrettyMain","background","brace","keyQuotes","valueQuotes","colon","comma","key","value","string","null","number","boolean","bracket","estiloJSONPrettySub","jsonReq","json","theme","parentAcc","rota","metodo","toUpperCase","getCompJsonReq","jsonResp","map","resp","status","respJson","DivJsonResp","desc","classStatus","statusString","tipo","errors","message","path","customJson","reqCriar","nome","email","cep","senha","respCriar","BoxLogin","reqLogarUsuario","respLogarUsuario","token","usuario","endereco","lat","lon","reqLogarAdmin","respLogarAdmin","App","margin","BoxInfoImportante","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"oNAiCeA,E,iLA5BT,OACG,kBAAC,WAAD,KAEG,yBAAKC,UAAU,OAAOC,MAAO,CAAEC,aAAa,SAEzC,yBAAKF,UAAU,0BAA0BC,MAAO,CAAEE,gBAAiB,SAAUC,MAAO,SACjFC,cAAY,WAAWC,cAAc,IAAMC,KAAKC,MAAMC,OAAOC,QAAQ,KAAM,KAAMC,gBAAeJ,KAAKC,MAAMC,OAAOC,QAAQ,KAAM,MAChI,wBAAIV,UAAU,oBAAoBO,KAAKC,MAAMC,OAA7C,QAGH,yBAAKG,GAAIL,KAAKC,MAAMC,OAAOC,QAAQ,KAAM,KAAMV,UAAU,WAAWa,cAAY,oBAE7E,yBAAKb,UAAU,aACZ,yBAAKY,GAAI,YAAcL,KAAKC,MAAMC,OAAOC,QAAQ,KAAM,MAElDH,KAAKC,MAAMM,kB,GAlBAC,aCuCtBC,E,iLAnCT,OAEG,kBAAC,EAAD,CAAoBP,OAAO,cACxB,wBAAIT,UAAU,yBAAyBC,MAAO,CAACgB,WAAW,SAA1D,gGAIG,0BAAMjB,UAAU,SAASC,MAAO,CAACiB,WAAW,QAA5C,iBAEH,yBAAKN,GAAG,WACL,yBAAKO,IAAI,kCAAkCC,IAAI,4BAElD,wBAAIpB,UAAU,sBAAsBY,GAAG,UAAvC,gGAKM,0BAAMZ,UAAU,QAAQY,GAAG,OAA3B,eALN,6CAQA,wCACA,uEAEG,0BAAMZ,UAAU,WAAhB,yBAFH,iBAIG,0BAAMA,UAAU,WAAhB,4BAEH,kC,GA9Bae,aC8BVhB,E,iLA5BT,OACG,kBAAC,WAAD,KAEG,yBAAKC,UAAU,OAAOC,MAAO,CAAEC,aAAa,SAEzC,yBAAKF,UAAU,0BAA0BC,MAAO,CAAEE,gBAAiB,UAAWC,MAAO,SAClFC,cAAY,WAAWC,cAAc,IAAMC,KAAKC,MAAMC,OAAOC,QAAQ,KAAM,KAAMC,gBAAeJ,KAAKC,MAAMC,OAAOC,QAAQ,KAAM,MAChI,wBAAIV,UAAU,oBAAoBO,KAAKC,MAAMC,SAGhD,yBAAKG,GAAIL,KAAKC,MAAMC,OAAOC,QAAQ,KAAM,KAAMV,UAAU,WAAWa,cAAY,oBAE7E,yBAAKb,UAAU,aACZ,yBAAKY,GAAI,YAAcL,KAAKC,MAAMC,OAAOC,QAAQ,KAAM,MAElDH,KAAKC,MAAMM,kB,GAlBAC,a,gBCkNtBM,E,6LA9MTd,KAAKe,qBAAuB,CACzBC,WAAY,eACZC,MAAO,qBACPC,UAAW,mBACXC,YAAa,mBACbC,MAAO,qBACPC,MAAO,qBACPC,IAAK,mBACLC,MAAO,CACJC,OAAQ,oBACRC,KAAM,mBACNC,OAAQ,mBACRC,QAAS,sBAEZC,QAAS,sBAGZ5B,KAAK6B,oBAAsB,CACxBb,WAAY,eACZC,MAAO,qBACPC,UAAW,mBACXC,YAAa,oBACbC,MAAO,qBACPC,MAAO,qBACPC,IAAK,mBACLC,MAAO,CACJC,OAAQ,oBACRC,KAAM,mBACNC,OAAQ,oBACRC,QAAS,mBAEZC,QAAS,wB,uCAOZ,IAAME,EAAU9B,KAAKC,MAAM6B,QAE3B,OAAGA,EAEG,kBAAC,WAAD,KACG,6DACA,yBAAKrC,UAAU,QACZ,kBAAC,IAAD,CAAYsC,KAAMD,EAASE,MAAOhC,KAAKe,yBAM7C,iC,+BAKC,IAAD,OAyGN,OACG,kBAAC,WAAD,KAEG,yBAAKtB,UAAU,OAAOC,MAAO,CAACC,aAAc,SAEzC,yBAAKF,UAAU,cAAcC,MAAO,CAAEE,gBAAiB,aACpDE,cAAY,WAAWC,cAAc,YAAcC,KAAKC,MAAMgC,UAAYjC,KAAKC,MAAMC,OAAOC,QAAQ,KAAM,KAAMC,gBAAgB,WAAaJ,KAAKC,MAAMgC,UAAYjC,KAAKC,MAAMC,OAAOC,QAAQ,KAAM,MACpM,wBAAIV,UAAU,oBAAoBO,KAAKC,MAAMC,SAGhD,yBAAKG,GAAK,WAAaL,KAAKC,MAAMgC,UAAYjC,KAAKC,MAAMC,OAAOC,QAAQ,KAAM,KAAOV,UAAU,WAAWa,cAAc,IAAMN,KAAKC,MAAMgC,WACtI,yBAAKxC,UAAU,YAAYC,MAAO,CAAEE,gBAAiB,UAClD,yBAAKH,UAAU,cACZ,wBAAIA,UAAU,oBAAoBO,KAAKC,MAAMiC,OAEhD,yBAAKzC,UAAU,4BACZ,wCAAWO,KAAKC,MAAMkC,OAAOC,gBAEhC,yBAAK3C,UAAU,aAGPO,KAAKqC,iBAEV,6BAEA,wDAIA,yBAAK5C,UAAU,aAEZ,kBAtID,WAEjB,OAAO,EAAKQ,MAAMqC,SAASC,IAAI,SAACC,GAChC,IAAMC,EAASD,EAAKC,OAChBC,EAAWF,EAAKA,KAEhBG,EAAc,GACdC,EAAO,GACPC,EAAc,GACZC,EAAeL,EAAS,GA4C9B,OA1CGC,GAGGA,EADkB,SAAlBA,EAASK,KACE,CACRC,OACA,CACG,CACGC,QAAS,SACTC,KAAM,kBAET,CACGD,QAAS,SACTC,KAAM,oBAMJR,EAASS,WAGvBR,EACG,kBAAC,WAAD,KACG,mEACA,yBAAKlD,UAAU,QACZ,kBAAC,IAAD,CAAYsC,KAAOW,EAAWV,MAAQ,EAAKH,yBAIpDc,EAAc,+BAIdE,EADoB,MAApBC,EAAa,GACC,QAEa,MAApBA,EAAa,IAAkC,MAApBA,EAAa,GACjC,WAGA,SAGVL,GACJ,KAAK,IACFG,EAAO,KACP,MAEH,KAAK,IACFA,EAAO,sBACP,MAEH,KAAK,IACFA,EAAO,yBACP,MAEH,KAAK,IACFA,EAAO,wDACP,MAEH,KAAK,IACFA,EAAO,oBACP,MAEH,KAAK,IACFA,EAAO,uBACP,MAEH,KAAK,IACFA,EAAO,mBACP,MAEH,QACGA,EAAO,UAAYH,EAKzB,OACG,kBAAC,WAAD,CAAUnB,IAAKmB,GACZ,yBAAKhD,UAAU,UAAUC,MAAO,CAACC,aAAa,SAC3C,0BAAMF,UAAYoD,GAAgBJ,GAClC,0BAAMhD,UAAU,QAASmD,IAE1BD,MAwCU,gB,GAnMCnC,aCiDbC,E,6LA9CTT,KAAKE,OAAS,UACdF,KAAKiC,UAAY,YAAcjC,KAAKE,OAAOC,QAAQ,KAAM,KAGzDH,KAAKoD,SAAW,CACbC,KAAM,kBACNC,MAAO,sBACPC,IAAI,YACJC,MAAO,oBAGVxD,KAAKyD,UAAY,CACd,CACGhB,OAAO,IACPD,KAAK,MAER,CACGC,OAAO,IACPD,KAAK,CACFO,KAAK,SAGX,CACGN,OAAO,IACPD,KAAK,S,+BAQX,OAEG,kBAAC,EAAD,CAAetC,OAASF,KAAKE,QAE1B,kBAAC,EAAD,CAAU+B,UAAYjC,KAAKiC,UAAY/B,OAAO,QAAQiC,OAAO,OAC1DD,KAAK,WAAWJ,QAAU9B,KAAKoD,SAAWd,SAAWtC,KAAKyD,iB,GAvChDjD,aC0GVkD,E,6LAxGT1D,KAAKE,OAAS,QACdF,KAAKiC,UAAY,YAAcjC,KAAKE,OAAOC,QAAQ,KAAM,KAGzDH,KAAK2D,gBAAkB,CACpBL,MAAO,4BACPE,MAAO,gBAGVxD,KAAK4D,iBAAmB,CACrB,CACGnB,OAAO,IACPD,KAAK,CACFO,KAAK,cACLI,WAAW,CACRU,MAAM,mBACNC,QAAQ,CACLzD,GAAI,EACJgD,KAAM,eACNC,MAAO,4BACPS,SAAU,yBACVC,IAAK,WACLC,IAAK,eAKjB,CACGxB,OAAO,IACPD,KAAK,MAER,CACGC,OAAO,IACPD,KAAK,MAER,CACGC,OAAO,IACPD,KAAK,OAKXxC,KAAKkE,cAAgB,CAClBZ,MAAO,4BACPE,MAAO,gBAGVxD,KAAKmE,eAAiB,CACnB,CACG1B,OAAO,IACPD,KAAK,CACFO,KAAK,cACLI,WAAW,CACRU,MAAM,mBACNC,QAAQ,CACLzD,GAAI,EACJgD,KAAM,eACNC,MAAO,4BACPS,SAAU,yBACVC,IAAK,WACLC,IAAK,eAKjB,CACGxB,OAAO,IACPD,KAAK,MAER,CACGC,OAAO,IACPD,KAAK,MAER,CACGC,OAAO,IACPD,KAAK,MAER,CACGC,OAAO,IACPD,KAAK,S,+BAQX,OAEG,kBAAC,EAAD,CAAetC,OAASF,KAAKE,QAE1B,kBAAC,EAAD,CAAU+B,UAAYjC,KAAKiC,UAAY/B,OAAO,gBAAgBiC,OAAO,OAClED,KAAK,iBAAiBJ,QAAU9B,KAAK2D,gBAAkBrB,SAAWtC,KAAK4D,mBAE1E,kBAAC,EAAD,CAAU3B,UAAYjC,KAAKiC,UAAY/B,OAAO,cAAciC,OAAO,OAChED,KAAK,eAAeJ,QAAU9B,KAAKkE,cAAgB5B,SAAWtC,KAAKmE,sB,GAjG3D3D,aCmBR4D,E,iLAhBT,OACG,yBAAK3E,UAAU,aACZ,wBAAIA,UAAU,cAAcC,MAAO,CAAC2E,OAAO,SAA3C,sCAEA,yBAAKhE,GAAG,mBAEL,kBAACiE,EAAD,MACA,kBAAC,EAAD,MACA,kBAAC,EAAD,Y,GAVG9D,aCOE+D,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2D,qBCTNC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,SDwH3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,KAAK,SAAAC,GACjCA,EAAaC,gB","file":"static/js/main.2594502c.chunk.js","sourcesContent":["import React, { Component, Fragment } from 'react';\r\n\r\nclass ComponentCardPrincipal extends Component {\r\n\r\n   render() {\r\n      return (\r\n         <Fragment>\r\n            {/* <!--INICIO CARD PRINCIPAL--> */}\r\n            <div className=\"card\" style={{ marginBottom:20+\"px\" }}>\r\n               {/* <!--TITULO CARD PRINCIPAL--> */}\r\n               <div className=\"card-header text-center\" style={{ backgroundColor: 'yellow', color: 'black' }}\r\n                  data-toggle=\"collapse\" data-target={ \"#\" + this.props.titulo.replace(/ /g, \"_\")} aria-controls={this.props.titulo.replace(/ /g, \"_\")}>\r\n                  <h2 className=\"font-weight-bold\">{this.props.titulo}!!!</h2>\r\n               </div>\r\n\r\n               <div id={this.props.titulo.replace(/ /g, \"_\")} className=\"collapse\" data-parent=\"#outterAccordion\">\r\n                  {/* <!--CORPO CARD PRINCIPAL--> */}\r\n                  <div className=\"card-body\">\r\n                     <div id={\"accordion\" + this.props.titulo.replace(/ /g, \"_\")}>\r\n\r\n                        { this.props.children }\r\n                        \r\n                     </div>\r\n                  </div>\r\n               </div>\r\n            </div>\r\n            {/* <!--FIM CARD PRINCIPAL--> */}\r\n         </Fragment>\r\n      );\r\n   }\r\n\r\n}\r\n\r\nexport default ComponentCardPrincipal;","import React, { Component } from 'react';\r\nimport CardInfoImportante from '../components/ComponentCardInfoImportante.js';\r\n\r\nclass BoxUsuario extends Component{\r\n   \r\n   render(){\r\n      return(\r\n      \r\n         <CardInfoImportante titulo=\"IMPORTANTE\">\r\n            <h4 className=\"font-bold text-justify\" style={{lineHeight:30+\"px\"}}>\r\n               Antes de realizar qualquer um dos \r\n               comandos abaixo, certifique-se de \r\n               que você esta na pasta\r\n               <span className=\"alerta\" style={{marginLeft:5+\"px\"}}>api_ragnarok</span>\r\n            </h4>\r\n            <div id=\"cx_foto\">\r\n               <img src=\"https://i.imgur.com/w2n3kaZ.png\" alt=\"Foto do cmd do windows\"/>\r\n            </div>\r\n            <h4 className=\"alerta text-justify\" id=\"cx_nrs\">\r\n               \r\n                  SEMPRE QUE VOCÊ DER UM PULL NO PROJETO, \r\n                  ANTES DE INICIAR A API SEMPRE EXECUTE \r\n                  ESTE COMANDO\r\n                  <span className=\"verde\" id=\"nrs\">npm run sql</span>\r\n                  , ELE IRÁ ATUALIZAR SEU BANCO DE DADOS\r\n            </h4>\r\n            <h4>Comandos</h4>\r\n            <p>\r\n               Em caso de erros na api execute o comando\r\n               <span className=\"comando\">npm run clean-project</span>,\r\n               e em seguida\r\n               <span className=\"comando\">npm run rebuild-project</span>\r\n            </p>\r\n            <hr/>\r\n         </CardInfoImportante>\r\n\r\n      );\r\n   }\r\n\r\n}\r\n\r\nexport default BoxUsuario;","import React, { Component, Fragment } from 'react';\r\n\r\nclass ComponentCardPrincipal extends Component {\r\n\r\n   render() {\r\n      return (\r\n         <Fragment>\r\n            {/* <!--INICIO CARD PRINCIPAL--> */}\r\n            <div className=\"card\" style={{ marginBottom:20+\"px\" }}>\r\n               {/* <!--TITULO CARD PRINCIPAL--> */}\r\n               <div className=\"card-header text-center\" style={{ backgroundColor: '#33cc33', color: 'black' }}\r\n                  data-toggle=\"collapse\" data-target={ \"#\" + this.props.titulo.replace(/ /g, \"_\")} aria-controls={this.props.titulo.replace(/ /g, \"_\")}>\r\n                  <h2 className=\"font-weight-bold\">{this.props.titulo}</h2>\r\n               </div>\r\n\r\n               <div id={this.props.titulo.replace(/ /g, \"_\")} className=\"collapse\" data-parent=\"#outterAccordion\">\r\n                  {/* <!--CORPO CARD PRINCIPAL--> */}\r\n                  <div className=\"card-body\">\r\n                     <div id={\"accordion\" + this.props.titulo.replace(/ /g, \"_\")}>\r\n\r\n                        { this.props.children }\r\n                        \r\n                     </div>\r\n                  </div>\r\n               </div>\r\n            </div>\r\n            {/* <!--FIM CARD PRINCIPAL--> */}\r\n         </Fragment>\r\n      );\r\n   }\r\n\r\n}\r\n\r\nexport default ComponentCardPrincipal;","import React, { Component, Fragment } from 'react';\r\nimport JSONPretty from 'react-json-prettify';\r\n\r\nclass ComponentRota extends Component {\r\n\r\n   componentWillMount() {\r\n      this.estiloJSONPrettyMain = {\r\n         background: 'rgb(0, 0, 0)',\r\n         brace: 'rgb(129, 211, 204)',\r\n         keyQuotes: 'rgb(201, 70, 56)',\r\n         valueQuotes: 'rgb(0, 223, 235)',\r\n         colon: 'rgb(129, 211, 204)',\r\n         comma: 'rgb(129, 211, 204)',\r\n         key: 'rgb(201, 70, 56)',\r\n         value: {\r\n            string: 'rgb(202, 209, 61)',\r\n            null: 'rgb(255, 183, 0)',\r\n            number: 'rgb(0, 132, 255)',\r\n            boolean: 'rgb(129, 211, 204)',\r\n         },\r\n         bracket: 'rgb(129, 211, 204)',\r\n      };\r\n\r\n      this.estiloJSONPrettySub = {\r\n         background: 'rgb(0, 0, 0)',\r\n         brace: 'rgb(129, 211, 204)',\r\n         keyQuotes: 'rgb(201, 70, 56)',\r\n         valueQuotes: 'rgb(242, 152, 59)',\r\n         colon: 'rgb(129, 211, 204)',\r\n         comma: 'rgb(129, 211, 204)',\r\n         key: 'rgb(51, 204, 51)',\r\n         value: {\r\n            string: 'rgb(133, 51, 204)',\r\n            null: 'rgb(51, 56, 204)',\r\n            number: 'rgb(204, 51, 150)',\r\n            boolean: 'rgb(235, 0, 12)',\r\n         },\r\n         bracket: 'rgb(129, 211, 204)',\r\n      };\r\n\r\n      \r\n   }\r\n\r\n   getCompJsonReq(){\r\n      const jsonReq = this.props.jsonReq;\r\n      \r\n      if(jsonReq){\r\n         return(\r\n            <Fragment>\r\n               <p>Formato do JSON a ser enviado:</p>\r\n               <pre className=\"json\">\r\n                  <JSONPretty json={jsonReq} theme={this.estiloJSONPrettyMain} />\r\n               </pre>\r\n            </Fragment>\r\n         );\r\n      } else {\r\n         return(\r\n            <span></span>\r\n         );\r\n      }\r\n   };\r\n\r\n   render() {\r\n\r\n      const GetCompResp = ()=>{\r\n\r\n         return this.props.jsonResp.map((resp) =>{\r\n         const status = resp.status;\r\n         let respJson = resp.resp;\r\n\r\n         let DivJsonResp = \"\";\r\n         let desc = \"\";\r\n         let classStatus = \"\";\r\n         const statusString = status + \"\";\r\n\r\n         if(respJson){\r\n\r\n            if(respJson.tipo === \"erro\"){\r\n               respJson = {\r\n                  errors: \r\n                  [\r\n                     {\r\n                        message: \"Erro 1\",\r\n                        path: \"nome_do_campo1\"\r\n                     },\r\n                     {\r\n                        message: \"Erro 2\",\r\n                        path: \"nome_do_campo2\"\r\n                     },\r\n   \r\n                  ]\r\n               };\r\n            } else {\r\n               respJson = respJson.customJson;\r\n            }\r\n\r\n            DivJsonResp =\r\n               <Fragment>\r\n                  <p>E tambem retorna um JSON no formato:</p> \r\n                  <pre className=\"json\">\r\n                     <JSONPretty json={ respJson } theme={ this.estiloJSONPrettySub } />\r\n                  </pre>\r\n               </Fragment>\r\n         } else {\r\n            DivJsonResp = <span></span>\r\n         }\r\n\r\n         if(statusString[0] === \"2\"){\r\n            classStatus = \"verde\";\r\n\r\n         } else if(statusString[0] === \"4\" || statusString[0] === \"5\"){\r\n            classStatus = \"vermelho\";\r\n\r\n         } else {\r\n            classStatus = \"alerta\";\r\n         }\r\n\r\n         switch(status){\r\n            case 200:\r\n               desc = \"Ok\"\r\n               break;\r\n            \r\n            case 201:\r\n               desc = \"Criado com sucesso!\"; \r\n               break;\r\n            \r\n            case 400:\r\n               desc = \"Má requisição\"; \r\n               break;\r\n            \r\n            case 401:\r\n               desc = \"Não autorizado (não possui o(s) privilégios)\"; \r\n               break;\r\n            \r\n            case 404:\r\n               desc = \"Não encontrado\"; \r\n               break;\r\n\r\n            case 433:\r\n               desc = \"Trancado (Bloqueado)\";\r\n               break;\r\n\r\n            case 500:\r\n               desc = \"Erro no servidor\";\r\n               break;\r\n\r\n            default:\r\n               desc = \"Status \" + status;\r\n               break;\r\n         }\r\n\r\n\r\n         return(\r\n            <Fragment key={status}>\r\n               <div className=\"cx_resp\" style={{marginBottom:10+\"px\"}}>\r\n                  <span className={ classStatus }>{ status }</span>\r\n                  <span className=\"desc\">{ desc }</span>\r\n               </div>\r\n               { DivJsonResp }\r\n            </Fragment>\r\n         );\r\n            \r\n      })\r\n\r\n\r\n      };\r\n\r\n      return (\r\n         <Fragment>\r\n\r\n            <div className=\"card\" style={{marginBottom: 25+'px'}}>\r\n\r\n               <div className=\"card-header\" style={{ backgroundColor: 'royalBlue' }} \r\n                  data-toggle=\"collapse\" data-target={ \"#collapse\" + this.props.parentAcc + this.props.titulo.replace(/ /g, \"_\")} aria-controls={ \"collapse\" + this.props.parentAcc + this.props.titulo.replace(/ /g, \"_\") }>\r\n                  <h3 className=\"font-weight-bold\">{this.props.titulo}</h3>\r\n               </div>\r\n\r\n               <div id={ \"collapse\" + this.props.parentAcc + this.props.titulo.replace(/ /g, \"_\") } className=\"collapse\" data-parent={ \"#\" + this.props.parentAcc }>\r\n                  <div className=\"card-body\" style={{ backgroundColor: 'black' }}>\r\n                     <div className=\"card-title\">\r\n                        <h4 className=\"font-weight-bold\">{this.props.rota}</h4>\r\n                     </div>\r\n                     <div className=\"card-subtitle text-muted\">\r\n                        <p>Método {this.props.metodo.toUpperCase()}</p>\r\n                     </div>\r\n                     <div className=\"card-text\">\r\n                        \r\n                           {/* VERIFICA SE EXISTE UMA JSON A SER PASSADO NA REQUESIÇÃO */}\r\n                           { this.getCompJsonReq() }\r\n                           \r\n                        <hr/>\r\n\r\n                        <p>Possiveis Respostas HTTP:</p>\r\n\r\n                        {/* //{ this.getCompJsonResp() } */}\r\n\r\n                        <div className=\"cx_status\">\r\n\r\n                           <GetCompResp/>\r\n\r\n                        </div>\r\n\r\n                     </div>\r\n                  </div>\r\n               </div>\r\n            </div>\r\n\r\n         </Fragment>\r\n      );\r\n   }\r\n}\r\n\r\nexport default ComponentRota;","import React, { Component } from 'react';\r\nimport CardPrincipal from '../components/ComponentCardPrincipal';\r\nimport CardRota from '../components/ComponentCardRota';\r\n\r\nclass BoxUsuario extends Component{\r\n   componentWillMount(){\r\n      this.titulo = \"Usuario\"\r\n      this.parentAcc = \"accordion\" + this.titulo.replace(/ /g, \"_\");\r\n      \r\n      //JSON's da rota de criar ===========\r\n      this.reqCriar = { \r\n         nome: \"Chimbinha Gomes\", \r\n         email: \"chimbinha@gmail.com\",\r\n         cep:\"66635-110\", \r\n         senha: \"amo_a_joelma_123\" \r\n      };\r\n\r\n      this.respCriar = [\r\n         {\r\n            status:201,\r\n            resp:null\r\n         },\r\n         {\r\n            status:400,\r\n            resp:{\r\n               tipo:\"erro\"\r\n            }\r\n         },\r\n         {\r\n            status:500,\r\n            resp:null\r\n         },\r\n      ];\r\n\r\n      //JSON's da rota de abc ===========\r\n   }\r\n   \r\n   render(){\r\n      return(\r\n      \r\n         <CardPrincipal titulo={ this.titulo }>\r\n\r\n            <CardRota parentAcc={ this.parentAcc } titulo='Criar' metodo='post' \r\n               rota=\"/usuario\" jsonReq={ this.reqCriar } jsonResp={ this.respCriar } />\r\n\r\n         </CardPrincipal>\r\n\r\n      );\r\n   }\r\n\r\n}\r\n\r\nexport default BoxUsuario;","import React, { Component } from 'react';\r\nimport CardPrincipal from '../components/ComponentCardPrincipal';\r\nimport CardRota from '../components/ComponentCardRota';\r\n\r\nclass BoxLogin extends Component{\r\n   componentWillMount(){\r\n      this.titulo = \"Login\"\r\n      this.parentAcc = \"accordion\" + this.titulo.replace(/ /g, \"_\");\r\n      \r\n      //JSON's da rota de logar usuario ===========\r\n      this.reqLogarUsuario = {\r\n         email: \"rogerin.ziika@hotmail.com\", \r\n         senha: \"hotwheels123\" \r\n      };\r\n\r\n      this.respLogarUsuario = [\r\n         {\r\n            status:200,\r\n            resp:{\r\n               tipo:\"customizada\",\r\n               customJson:{\r\n                  token:\"um_token_gigante\",\r\n                  usuario:{\r\n                     id: 3,\r\n                     nome: \"Dj rogerinho\",\r\n                     email: \"rogerin.ziika@hotmail.com\",\r\n                     endereco: \"RJ, Morro do alemão\",\r\n                     lat: \"-66.0000\",\r\n                     lon: \"-69.7777\"\r\n                  }\r\n               }\r\n            }\r\n         },\r\n         {\r\n            status:404,\r\n            resp:null\r\n         },\r\n         {\r\n            status:433,\r\n            resp:null\r\n         },\r\n         {\r\n            status:500,\r\n            resp:null\r\n         }\r\n      ];\r\n\r\n      //JSON's da rota de logar admin ===========\r\n      this.reqLogarAdmin = {\r\n         email: \"rogerin.ziika@hotmail.com\", \r\n         senha: \"hotwheels123\" \r\n      };\r\n\r\n      this.respLogarAdmin = [\r\n         {\r\n            status:200,\r\n            resp:{\r\n               tipo:\"customizada\",\r\n               customJson:{\r\n                  token:\"um_token_gigante\",\r\n                  usuario:{\r\n                     id: 3,\r\n                     nome: \"Dj rogerinho\",\r\n                     email: \"rogerin.ziika@hotmail.com\",\r\n                     endereco: \"RJ, Morro do alemão\",\r\n                     lat: \"-66.0000\",\r\n                     lon: \"-69.7777\"\r\n                  }\r\n               }\r\n            }\r\n         },\r\n         {\r\n            status:401,\r\n            resp:null\r\n         },\r\n         {\r\n            status:404,\r\n            resp:null\r\n         },\r\n         {\r\n            status:433,\r\n            resp:null\r\n         },\r\n         {\r\n            status:500,\r\n            resp:null\r\n         }\r\n      ];\r\n\r\n      //JSON's da rota de aieou ===========\r\n   }\r\n   \r\n   render(){\r\n      return(\r\n      \r\n         <CardPrincipal titulo={ this.titulo }>\r\n\r\n            <CardRota parentAcc={ this.parentAcc } titulo='Logar Usuario' metodo='post' \r\n               rota=\"/login/usuario\" jsonReq={ this.reqLogarUsuario } jsonResp={ this.respLogarUsuario } />\r\n\r\n            <CardRota parentAcc={ this.parentAcc } titulo='Logar Admin' metodo='post' \r\n               rota=\"/login/admin\" jsonReq={ this.reqLogarAdmin } jsonResp={ this.respLogarAdmin } />\r\n\r\n         </CardPrincipal>\r\n\r\n      );\r\n   }\r\n\r\n}\r\n\r\nexport default BoxLogin;","import React, { Component } from 'react';\r\nimport BoxInfoImportante from './boxes/BoxInfoImportante';\r\nimport BoxUsuario from './boxes/BoxUsuario';\r\nimport BoxLogin from './boxes/BoxLogin';\r\n\r\nclass App extends Component {\r\n   render() {\r\n      return (\r\n         <div className=\"container\">\r\n            <h1 className=\"text-center\" style={{margin:35+\"px\"}}>Documentação Da Api Ragnarok</h1>\r\n \r\n            <div id=\"outterAccordion\">\r\n               \r\n               <BoxInfoImportante/>\r\n               <BoxUsuario/>\r\n               <BoxLogin/>\r\n\r\n            </div>\r\n         </div>\r\n      );\r\n   }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport 'bootstrap/dist/css/bootswatch.darkly.min.css';\r\nimport 'bootstrap/dist/js/bootstrap.bundle.min';\r\nimport './css/style.css';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}